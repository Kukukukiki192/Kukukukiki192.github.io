<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Mac开发环境配置</title>
    <link href="/2024/02/03/MacDE%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/02/03/MacDE%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1>Homebrew</h1><blockquote><p>参考：<a href="https://www.jb51.net/article/253389.htm">Mac包管理器Homebrew的安装方法</a></p></blockquote><h2 id="自动脚本-全部国内地址">自动脚本(全部国内地址)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装</span><br>/bin/zsh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span><br><span class="hljs-comment"># 卸载</span><br>/bin/zsh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/HomebrewUninstall.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><h2 id="安装过程">安装过程</h2><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE35.png" alt="MacDE35"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.zshrc <span class="hljs-comment"># 配置homebrew环境变量</span><br><span class="hljs-built_in">export</span> HOMEBREW_HOME=/opt/homebrew<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HOMEBREW_HOME</span>/bin<br><span class="hljs-built_in">source</span> ～/.zshrc <span class="hljs-comment"># 使环境变量生效</span><br></code></pre></td></tr></table></figure><p>fix：后来 <code>echo $PATH</code> 检查输出包含了两次 <code>/opt/homebrew/bin</code>，重复写入了，删掉 <code>~/.zshrc</code> 中写入 <code>$PATH</code> 的路径. XXX_HOME不用删方便查看软件安装路径</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE1.png" alt=""></p><blockquote><p>在 <code>$PATH</code> 中包含了 <code>/opt/homebrew/bin</code> 时，你已经拥有了 Homebrew 默认安装目录的权限，用 <code>which pkg_name</code> 命令检查若能够成功返回软件的可执行文件路径，则无需再手动添加软件的二进制文件路径到 <code>$PATH</code> 中，Homebrew 会为你管理这一切</p></blockquote><h2 id="默认-shell">默认 shell</h2><p>若编辑的文件是<code>.bash_profile</code>，而关闭终端后发现每次重新打开终端都需要重新运行 <code>source ~/.bash_profile</code>，是因为 shell 配置文件没有在每次打开终端时自动加载</p><p>在 macOS 中，默认的终端应该在启动时自动加载 <code>.bash_profile</code>，但如果使用 Zsh 作为默认 shell，而环境变量配置写到了 <code>.bash_profile</code> 中，这可能导致 Zsh 无法读取到这些配置. Zsh 通常会读取 <code>~/.zshrc</code> 文件来加载配置</p><p>解决方法：</p><ol><li><p>把环境变量配置写到 <code>.zshrc</code> 中</p></li><li><p>若想继续使用 <code>.bash_profile</code> 来管理环境变量，可在文件末尾添加一行来加载 <code>.zshrc</code>：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ -f ~/.zshrc ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">source</span> ~/.zshrc<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><ol start="3"><li>把默认 shell 换成 bash，重启终端生效</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span> <span class="hljs-comment"># 检查当前终端使用的默认 shell</span><br><span class="hljs-built_in">cat</span> /etc/shells <span class="hljs-comment"># 查看系统上安装的可用 shell</span><br>chsh -s /path/to/new/shell <span class="hljs-comment"># 更改默认 shell</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE2.png" alt=""></p><p><code>The default interactive shell is now zsh.</code> 提示是 macOS 10.15 Catalina 版本以后默认切换到了 zsh 作为默认的 shell 后显示的.</p><blockquote><p>Zsh（Z Shell）是Bash的一个强大的替代品，它提供了更好的命令补全、历史记录管理等功能. 它还支持用插件和脚本扩展其功能. 因此，将Zsh设置为默认Shell可以大大提高操作便利性和效率.</p></blockquote><p>看起来zsh更好用，换回来</p><h2 id="问题解决">问题解决</h2><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE36.png" alt="MacDE36"></p><p><code>Error: Checksum mismatch.</code> 报错原因：Homebrew目录下的<code>portable-ruby-2.6.3_2.yosemite.bottle.tar.gz</code>文件引起的安装中断<br>解决方法：删掉对应路径文件，重新执行安装命令即可</p><hr><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE37.png" alt="MacDE37"></p><p>安装 Core、Cask、services 时失败或卡住，按 <code>ctrl-c</code> 中断脚本执行 <code>git clone</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(brew --repo)</span>/Library/Taps/&quot;</span><br><span class="hljs-built_in">mkdir</span> homebrew &amp;&amp; <span class="hljs-built_in">cd</span> homebrew<br>git <span class="hljs-built_in">clone</span> git://mirrors.ustc.edu.cn/homebrew-xxx.git<br><span class="hljs-comment"># eg.</span><br>k@KMac-mini ~ % <span class="hljs-built_in">cd</span> /opt/homebrew/Library/Taps/homebrew<br>k@KMac-mini homebrew % <span class="hljs-built_in">ls</span><br>homebrew-caskhomebrew-corehomebrew-services<br>k@KMac-mini homebrew % sudo <span class="hljs-built_in">rm</span> -rf homebrew-cask<br>Password:<br>k@KMac-mini homebrew % sudo git <span class="hljs-built_in">clone</span> https://mirrors.ustc.edu.cn/homebrew-cask.git<br>Cloning into <span class="hljs-string">&#x27;homebrew-cask&#x27;</span>...<br>remote: Enumerating objects: 913406, <span class="hljs-keyword">done</span>.<br>remote: Total 913406 (delta 0), reused 0 (delta 0), pack-reused 913406<br>Receiving objects: 100% (913406/913406), 440.35 MiB | 835.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Resolving deltas: 100% (664865/664865), <span class="hljs-keyword">done</span>.<br></code></pre></td></tr></table></figure><p>成功后继续执行安装命令(即重新运行安装脚本)，Homebrew会检测到已安装的部分并继续安装未完成的部分(我的不行还是重装了)</p><hr><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE38.png" alt="MacDE38"></p><p>原因是homebrew的根目录没有信任Homebrew/homebrew-core (no Git repository)和Homebrew/homebrew-cask (no Git repository)，直接按照提示运行这两个命令行即可.<br><strong>装Homebrew时会自动安装Git</strong></p><h2 id="brew-命令">brew 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew -v <span class="hljs-comment"># 查看版本</span><br>brew update <span class="hljs-comment"># 更新brew版本</span><br>brew upgrade 软件名 <span class="hljs-comment"># 更新软件</span><br>brew search 软件名 <span class="hljs-comment"># 搜索</span><br>brew install 软件名 <span class="hljs-comment"># 安装</span><br>brew uninstall 软件名 <span class="hljs-comment"># 卸载</span><br>brew <span class="hljs-built_in">ls</span> <span class="hljs-comment"># 本地软件库列表</span><br>brew list <span class="hljs-comment"># 显示已安装软件</span><br>brew list 软件名 <span class="hljs-comment"># 查看软件的安装目录及其内容</span><br>brew info 软件名 <span class="hljs-comment"># 查看软件信息</span><br>brew home 软件名 <span class="hljs-comment"># 用浏览器打开官方网页查看软件信息</span><br>brew outdated <span class="hljs-comment"># 查看哪些已安装的程序需要更新</span><br>brew reps <span class="hljs-comment"># 显示包依赖</span><br>brew <span class="hljs-built_in">help</span> <span class="hljs-comment"># 显示帮助</span><br></code></pre></td></tr></table></figure><h1>Git</h1><ul><li><p><strong>配置用户名和邮箱信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;username&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;email&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>生成SSH Key</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;本人GitHub绑定的邮箱&quot;</span> <span class="hljs-comment"># 默认一路回车不要设置密码</span><br></code></pre></td></tr></table></figure></li><li><p><strong>在GitHub添加SSH Key</strong></p><p><code>Settings</code>–<code>SSH and GPG keys</code>–<code>new SSH key</code></p><p>Title：自定义</p><p>Key：填入<code>~/.ssh/id_rsa.pub</code>中生成的SSH Key字符串</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE3.png" alt=""></p></li><li><p><strong>验证配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE39.png" alt="MacDE39"></p></li></ul><h1>Java环境</h1><h2 id="JDK">JDK</h2><ul><li><p>机型 系统版本</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE40.png" alt="MacDE40"></p></li><li><p>Homebrew安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install openjdk<br></code></pre></td></tr></table></figure><p>(我用这个安装有点问题改成手动安装了)</p></li><li><p>手动安装</p><p><a href="https://www.oracle.com/java/technologies/downloads">Java Download | Oracle</a></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE4.png" alt=""></p><p><a href="https://blog.csdn.net/danxiaodeshitou/article/details/134258750">bin.zip  bin.tar.gz  src.zip  src.tar.gz  rpm  dmg 区别</a></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE5.png" alt=""></p></li><li><p>环境变量配置</p><p>除了从 <code>关于本机</code> 查看芯片类型，还能用 <code>uname -a</code> 查看Mac是macOS x64(Intel)还是macOS ARM64(M)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version <span class="hljs-comment"># 验证安装</span><br>/usr/libexec/java_home -V <span class="hljs-comment"># 查看JDK安装路径</span><br><span class="hljs-comment"># 配置JDK环境变量</span><br><span class="hljs-built_in">export</span> JAVA21_HOME=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home<br><span class="hljs-built_in">export</span> JAVA_HOME=<span class="hljs-variable">$JAVA21_HOME</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br><span class="hljs-built_in">export</span> CLASSPATH=<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/dt.jar:.<br><span class="hljs-built_in">alias</span> jdk21=<span class="hljs-string">&#x27;export JAVA_HOME=$JAVA21_HOME&#x27;</span><br><span class="hljs-comment"># 验证配置</span><br>java -version <span class="hljs-comment"># 检查Java版本</span><br>javac -version <span class="hljs-comment"># 检查Java编译器版本</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE6.png" alt=""></p></li></ul><h2 id="Tomcat">Tomcat</h2><ul><li><p>Homebrew安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install tomcat<br><span class="hljs-comment"># 启动Tomcat</span><br>catalina run <span class="hljs-comment"># 或</span><br>brew services start tomcat<br></code></pre></td></tr></table></figure></li><li><p>手动安装</p><p><a href="https://c.biancheng.net/servlet2/tomcat-download.html">Tomcat下载和安装</a> <a href="https://tomcat.apache.org/download-10.cgi">Apache Tomcat</a></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE7.png" alt=""></p></li><li><p>环境变量配置</p><p>(CSDN报错参考：“解压缩后，将文件放到library（即资源库）中，放到其他地方可能也行，但我放到其他地方在启动时会出错，因此参考了<a href="https://www.jianshu.com/p/0938b1e538f5?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes">Mac系统安装Tomcat终端出现-bash: startup.sh: command not found - 简书</a>，将文件放在了library里”）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> CATALINA_HOME=/Library/Tomcat/apache-tomcat-10.1.17<br><span class="hljs-built_in">export</span> PATH=..:<span class="hljs-variable">$CATALINA_HOME</span>/bin<br></code></pre></td></tr></table></figure></li><li><p>验证启动 <a href="http://localhost:8080">http://localhost:8080</a></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE8.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE9.png" alt=""></p><p><code>shutdown.sh</code> 关闭</p></li></ul><h2 id="Maven">Maven</h2><ul><li><p>手动安装</p><p><a href="https://www.runoob.com/maven/maven-setup.html">Maven 环境配置</a></p></li><li><p>Homebrew安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install maven<br>mvn -v <span class="hljs-comment"># 验证Maven安装</span><br>brew list maven <span class="hljs-comment"># 查找Maven安装路径</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE10.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE11.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE12.png" alt=""></p><p>添加环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> MAVEN_HOME=/opt/homebrew/Cellar/maven/3.9.6<br></code></pre></td></tr></table></figure></li><li><p>生成 <code>.m2</code> 文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mvn <span class="hljs-built_in">help</span>:system<br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE13.png" alt=""></p></li><li><p>配置中央仓库镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/homebrew/Cellar/maven/3.9.6/libexec/conf <span class="hljs-comment"># 安装目录</span><br>vim settings.xml <span class="hljs-comment"># 编辑配置文件</span><br>&lt;mirrors&gt;<br>    &lt;mirror&gt;<br>        &lt;<span class="hljs-built_in">id</span>&gt;aliyun&lt;/id&gt;<br>        &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;<br>        &lt;name&gt;Aliyun Maven Central&lt;/name&gt;<br>        &lt;url&gt;https://maven.aliyun.com/repository/central&lt;/url&gt;<br>    &lt;/mirror&gt;<br>&lt;/mirrors&gt;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE14.png" alt=""></p></li><li><p>配置本地仓库位置</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE15.png" alt=""></p><p>Maven 会使用默认路径 <code>~/.m2/repository</code></p><blockquote><p><code>settings.xml</code> 补充说明（<a href="https://blog.csdn.net/pan_junbiao/article/details/104264644">原文</a>）：<br><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE16.png" alt=""></p></blockquote></li><li><p><a href="https://c.biancheng.net/maven2/idea-maven-config.html">IDEA配置Maven环境</a></p><p>将本地安装的 Maven 配置到 IntelliJ IDEA 中，不用 IDEA 自带的 Maven</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE17.png" alt=""></p><p>免费的IDEA社区版创建不了SpringBoot项目 参考：<a href="https://www.jb51.net/article/281303.htm">利用IDEA社区版创建SpringBoot项目的详细图文教程</a></p></li></ul><h1>MySQL</h1><h2 id="安装过程-v2">安装过程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew search mysql<br>brew install mysql<br>brew services start mysql <span class="hljs-comment"># 启动MySQL服务</span><br>mysql_secure_installation <span class="hljs-comment"># 设置MySQL根密码 psw:11001100</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE18.png" alt=""></p><p>添加环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> MYSQL_HOME=/opt/homebrew/Cellar/mysql/8.2.0_1<br></code></pre></td></tr></table></figure><h2 id="DataGrip连接MySQL">DataGrip连接MySQL</h2><blockquote><p>DataGrip激活：公众号-安哥说后端 <a href="https://chenjunan.top/img/jetbra.zip">激活工具</a> <a href="https://chenjunan.top/img/activate/datagrip-new.txt">datagrip激活码</a> <a href="www.bilibili.com/read/cv28362142">图文激活教程</a></p></blockquote><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE19.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE20.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE21.png" alt=""></p><h1><a href="https://hexo.io/zh-cn/">Hexo配置</a></h1><p>前提：Git ✅ <a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node <span class="hljs-comment"># 安装node</span><br>node -v<br>npm -v<br>npm install hexo-cli -g <span class="hljs-comment"># 安装hexo</span><br>npm install hexo <span class="hljs-comment"># 熟悉npm的可仅局部安装hexo包</span><br>hexo -v<br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE22.png" alt=""></p><blockquote><p><a href="https://www.runoob.com/nodejs/nodejs-npm.html">NPM</a>是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install xx <span class="hljs-comment"># 本地安装</span><br>npm install -g xx <span class="hljs-comment"># 全局安装</span><br>npm uninstall xxx <span class="hljs-comment"># 卸裁模抉</span><br>npm update xx <span class="hljs-comment"># 更新模块</span><br>npm search xx <span class="hljs-comment"># 搜索模块</span><br></code></pre></td></tr></table></figure><ul><li><p>发布前配置好1️⃣ ssh_key ✅ 2️⃣ <code>_config.yml</code> 中 deploy 部分</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE23.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/Document/kblog<br>hexo init<br>npm install <span class="hljs-comment"># 根据package.json文件中的依赖项列表安装所有必要的包</span><br>hexo g <span class="hljs-comment"># 生成</span><br>hexo s <span class="hljs-comment"># 启动服务</span><br>npm install hexo-deployer-git --save <span class="hljs-comment"># 安装部署插件</span><br>hexo d <span class="hljs-comment"># 部署到github </span><br></code></pre></td></tr></table></figure></li><li><p><a href="https://blog.csdn.net/Zhangxiaorui_9/article/details/79723288?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-79723288-blog-105105705.235%5Ev40%5Epc_relevant_anti_t3_base&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-79723288-blog-105105705.235%5Ev40%5Epc_relevant_anti_t3_base&amp;utm_relevant_index=2">多台电脑操作hexo个人网站</a></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE24.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE25.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE26.png" alt=""></p><p>之后每次换电脑更新博客前先git pull</p></li></ul><h1>Typora</h1><h2 id="激活">激活</h2><p><a href="https://typoraio.cn">Typora官网</a> 下载后在<code>/Applications/Typora.app/Contents/Resources/TypeMark/page-dist/static/js</code> 路径下找到LicenseIndex开头的js文件，把<code>e.hasActivated=”true”==e.hasActivated</code> 改为 <code>e.hasActivated=”true”==”true”</code></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE27.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE28.png" alt=""></p><h2 id="图床配置">图床配置</h2><p><a href="https://kk1024.cool/2023/02/03/TyporaImg">Typora + PicGO-Core(cmd安装方式) + Github 实现图片上传</a></p><ul><li><p>安装</p><p>npm在本地安装PicGo-Core</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE29.png" alt=""></p></li><li><p>配置</p><p>交互式命令行配置并自动生成配置文件</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE30.png" alt=""></p></li><li><p>Typora设置</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE31.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install picgo -g <span class="hljs-comment">#安装PicGo-Core</span><br>picgo <span class="hljs-built_in">set</span> uploader <span class="hljs-comment">#交互式命令行配置</span><br>picgo use uploader <span class="hljs-comment">#选择当前要使用的Uploader</span><br><span class="hljs-comment">#配置文件 ~/.picgo/config.json</span><br>&#123;<br>  <span class="hljs-string">&quot;picBed&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;uploader&quot;</span>: <span class="hljs-string">&quot;github&quot;</span>,  //当前默认上传图床<br>    <span class="hljs-string">&quot;current&quot;</span>: <span class="hljs-string">&quot;github&quot;</span>,<br>    <span class="hljs-string">&quot;github&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;repo&quot;</span>: <span class="hljs-string">&quot;Kukukukiki192/TyporaImg&quot;</span>,  //自己的仓库名<br>      <span class="hljs-string">&quot;branch&quot;</span>: <span class="hljs-string">&quot;main&quot;</span>,  //默认分支<br>      <span class="hljs-string">&quot;token&quot;</span>: <span class="hljs-string">&quot;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&quot;</span>,  // github的token<br>      <span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;img/&quot;</span>,  //自定义存储路径(仓库下新建文件夹，可为空)<br>      <span class="hljs-string">&quot;customUrl&quot;</span>: <span class="hljs-string">&quot;https://github.com/Kukukukiki192/TyporaImg/raw/main&quot;</span>  //自定义域名<br>      //https://github.com/[username]/[repo]/raw/[branch] 必须是该格式,不然用其它域名访问图片404本地加载失败<br>    &#125;,<br>    <span class="hljs-string">&quot;transformer&quot;</span>: <span class="hljs-string">&quot;path&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;picgoPlugins&quot;</span>: &#123;&#125;  // 为插件预留<br>&#125;<br><span class="hljs-comment">#上传的图片地址</span><br>https://raw.githubusercontent.com/Kukukukiki192/TyporaImg/main/img/icon_512x512.png<br>https://github.com/Kukukukiki192/TyporaImg/raw/main/img/icon_512x512.png<br></code></pre></td></tr></table></figure></li></ul><h1>Dash</h1><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE32.png" alt=""></p><h1>Python</h1><p><a href="https://www.jianshu.com/p/dc396a37ddee">Mac下的Pycharm教程</a></p><p>anaconda = python + （NumPy、SciPy 等常用第三方库 ）+ IDE</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE33.png" alt=""></p><p><a href="https://zhuanlan.zhihu.com/p/142657444">学习 python 必须弄懂的 Python、Pycharm、Anaconda 三者之间的关系</a></p><p><a href="https://m.py.cn/faq/python/15704.html">anaconda和python的区别</a></p><p>安装新的python前要确保以前的卸载干净</p><h1>VMware Fusion</h1><p><a href="https://my.vmware.com/web/vmware/evalcenter?p=fusion-player-personal">VMware Fusion英文官网</a>  针对个人用户免费 <a href="https://github.com/Kukukukiki192/Info/blob/master/vmQ%26A">macOS安装VMware操作记录</a></p><p>注册账号并申请序列号，必须用英文官网打开. 用goole chrome打开会自动跳转到中文网站，改用Safari才行. 按提示注册后，会出现序列号，复制出来，下载dmg文件安装时使用即可</p><blockquote><p>注：VMware12版本需要macOS11.0以上，此macOS10.13不能使用，需要安装VMware11.5</p></blockquote><p><a href="https://kb.vmware.com/s/article/2088571">MacOS系统版本和VMware各版本适配情况</a></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/MacDE34.png" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>Typora</tag>
      
      <tag>MacOS</tag>
      
      <tag>Homebrew</tag>
      
      <tag>Git</tag>
      
      <tag>Java</tag>
      
      <tag>MySQL</tag>
      
      <tag>Hexo</tag>
      
      <tag>Python</tag>
      
      <tag>VMware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win快捷键</title>
    <link href="/2024/02/03/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/2024/02/03/%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<h1>Win</h1><p>cmd 命令行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">control <span class="hljs-comment">#打开控制面板</span><br>ipconfig [/all显示更详细信息] <span class="hljs-comment">#查看和配置网络接口信息(Linux: ifconfig 新版命令ip addr show)</span><br>ipconfig /flushdns <span class="hljs-comment">#刷新缓存</span><br>netsh winsock reset <span class="hljs-comment">#重置网络</span><br></code></pre></td></tr></table></figure><p>win+r 运行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh">wt <span class="hljs-comment">#打开 Windows Terminal</span><br>cmd <span class="hljs-comment">#打开命令提示符（Command Prompt）窗口</span><br>powershell <span class="hljs-comment">#打开PowerShell终端窗口</span><br>calc <span class="hljs-comment">#打开计算器</span><br>mspaint <span class="hljs-comment">#打开画图工具（Microsoft Paint）</span><br>notepad <span class="hljs-comment">#打开记事本</span><br>control <span class="hljs-comment">#打开控制面板</span><br>taskmgr <span class="hljs-comment">#打开任务管理器，用于管理运行中的进程和应用程序</span><br>regedit <span class="hljs-comment">#打开Windows注册表编辑器，用于编辑系统注册表</span><br>servises.msc <span class="hljs-comment">#打开服务</span><br>devmgmt.msc <span class="hljs-comment">#打开设备管理器，用于管理计算机的硬件设备</span><br>appwiz.cpl <span class="hljs-comment">#打开&#x27;程序和功能&#x27;窗口，允许您卸载或更改已安装的程序</span><br>msconfig <span class="hljs-comment">#打开系统配置实用程序，用于配置系统启动项和服务</span><br>msinfo32 <span class="hljs-comment">#打开系统信息实用程序，显示有关计算机硬件和软件的详细信息</span><br>dxdiag <span class="hljs-comment">#打开DirectX诊断工具，用于检查图形和音频驱动程序</span><br>control userpasswords2 <span class="hljs-comment">#打开用户帐户窗口，允许您管理用户帐户设置</span><br>osk <span class="hljs-comment">#打开屏幕键盘，适用于触摸屏设备或需要虚拟键盘的情况</span><br>inetcpl.cpl <span class="hljs-comment">#打开Internet属性，允许您配置Internet Explorer的设置</span><br>winver <span class="hljs-comment">#显示Windows版本和构建信息</span><br>%temp% <span class="hljs-comment">#打开临时文件夹，您可以查看和删除临时文件</span><br></code></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">键盘</th><th></th></tr></thead><tbody><tr><td style="text-align:left"><code>Ctrl-Shift-E</code></td><td>打开emoji符号面板</td></tr><tr><td style="text-align:left"><code>Shift</code></td><td>中/英切换</td></tr><tr><td style="text-align:left"><code>Ctrl-.</code></td><td>中/英标点切换</td></tr><tr><td style="text-align:left"><code>Shift-Space</code></td><td>全/半角切换</td></tr><tr><td style="text-align:left"><strong>文件</strong></td><td></td></tr><tr><td style="text-align:left"><code>Ctrl-S</code></td><td>保存</td></tr><tr><td style="text-align:left"><code>Ctrl-W</code> / <code>Alt-F4</code></td><td>关闭</td></tr><tr><td style="text-align:left"><code>Ctrl-Y</code></td><td>恢复</td></tr><tr><td style="text-align:left"><code>Ctrl-N</code></td><td>在所选项上新建空白窗口</td></tr><tr><td style="text-align:left"><strong>电脑</strong></td><td></td></tr><tr><td style="text-align:left"><code>Win-L</code></td><td>锁屏</td></tr><tr><td style="text-align:left"><code>Win-D</code></td><td>返回桌面</td></tr><tr><td style="text-align:left"><code>Win-R</code></td><td>打开运行</td></tr><tr><td style="text-align:left"><code>Win-E</code></td><td>打开此电脑</td></tr><tr><td style="text-align:left"><code>Win-X</code></td><td>打开快捷菜单(开始菜单右键)</td></tr><tr><td style="text-align:left"><code>Win-W</code></td><td>打开小组件</td></tr><tr><td style="text-align:left"><code>Alt-Q</code></td><td>智慧搜索</td></tr><tr><td style="text-align:left"><code>Alt-Tab</code></td><td>切换应用(触摸板==三指左右划不挪开==)</td></tr><tr><td style="text-align:left"><code>Win-Tab</code></td><td>进入虚拟桌面(触摸板==三指上划==)</td></tr><tr><td style="text-align:left"><code>Ctrl-Win-l/r</code></td><td>切换虚拟桌面(触摸板==四指左右划==)</td></tr><tr><td style="text-align:left"><code>Ctrl-Win-D</code></td><td>添加虚拟桌面</td></tr><tr><td style="text-align:left"><code>Ctrl-Alt-Delete</code></td><td>调出安全窗口(→任务管理器)</td></tr><tr><td style="text-align:left"><code>Ctrl-Esc</code> / <code>Win</code></td><td>开始菜单</td></tr><tr><td style="text-align:left"><code>Insert</code></td><td>光标 <code>|</code> ↔ <code>_</code></td></tr><tr><td style="text-align:left"><strong>浏览器</strong></td><td></td></tr><tr><td style="text-align:left"><code>F12</code> / <code>Ctrl-Shift-I</code></td><td>打开开发者工具</td></tr><tr><td style="text-align:left"><code>Ctrl-Shift-P</code></td><td>开发者工具中弹出搜索框</td></tr><tr><td style="text-align:left"><code>F5</code></td><td>刷新当前窗口</td></tr><tr><td style="text-align:left"><code>Tab</code></td><td>改变焦点 回到页首</td></tr><tr><td style="text-align:left"><code>M</code></td><td>看视频时静音</td></tr></tbody></table><h1>开发工具</h1><table><thead><tr><th style="text-align:left">Notepad++</th><th></th></tr></thead><tbody><tr><td style="text-align:left"><code>Ctrl-Shift-Alt-B</code></td><td>xml格式化</td></tr></tbody></table><table><thead><tr><th style="text-align:left">VSCode</th><th style="text-align:left">格式化代码</th></tr></thead><tbody><tr><td style="text-align:left">On Windows</td><td style="text-align:left"><code>Shift-Alt-F</code></td></tr><tr><td style="text-align:left">On Mac</td><td style="text-align:left"><code>Shift-Option-F</code></td></tr><tr><td style="text-align:left">On Ubuntu</td><td style="text-align:left"><code>Ctrl-Shift-I</code></td></tr></tbody></table><table><thead><tr><th style="text-align:left">XShell</th><th></th></tr></thead><tbody><tr><td style="text-align:left"><code>Ctrl-鼠标滚轮</code></td><td>页面放大缩小</td></tr><tr><td style="text-align:left"><code>Ctrl-L</code></td><td>clean页面</td></tr><tr><td style="text-align:left"><code>Shift-Insert</code></td><td>黏贴到终端</td></tr><tr><td style="text-align:left"><code>ALT-E</code></td><td>唤出顶部菜单栏</td></tr></tbody></table><h1>IDEA</h1><table><thead><tr><th style="text-align:left"><code>Alt-Shift-↑/↓/←/→</code></th><th style="text-align:left">选中多列、多行</th></tr></thead><tbody><tr><td style="text-align:left"><code>Ctrl-K</code></td><td style="text-align:left">commit ✔</td></tr><tr><td style="text-align:left"><code>Ctrl-Shift-K</code></td><td style="text-align:left">push ↗</td></tr><tr><td style="text-align:left"><code>Alt-9</code></td><td style="text-align:left">预览项目提交历史</td></tr><tr><td style="text-align:left"><code>Ctrl-W</code></td><td style="text-align:left">expand code selection</td></tr><tr><td style="text-align:left"><code>Ctrl-/</code></td><td style="text-align:left">单行注释</td></tr><tr><td style="text-align:left"><code>Ctrl-Shift-/</code></td><td style="text-align:left">多行注释</td></tr><tr><td style="text-align:left"><code>Alt-1</code></td><td style="text-align:left">打开工具窗口</td></tr><tr><td style="text-align:left"><code>Alt-~</code></td><td style="text-align:left">打开Git命令窗口</td></tr><tr><td style="text-align:left"><code>Ctrl-滚轮 / 触摸屏缩放</code></td><td style="text-align:left">调整字体大小</td></tr><tr><td style="text-align:left"><code>Ctrl-F</code></td><td style="text-align:left">本页 查找</td></tr><tr><td style="text-align:left"><code>Ctrl-Shift-F</code></td><td style="text-align:left">全局 查找</td></tr><tr><td style="text-align:left"><code>Ctrl-R</code></td><td style="text-align:left">本页 查找替换</td></tr><tr><td style="text-align:left"><code>Ctrl-Shift-R</code></td><td style="text-align:left">全局 查找替换</td></tr><tr><td style="text-align:left"><code>Ctrl-Alt-S</code></td><td style="text-align:left">#打开设置</td></tr><tr><td style="text-align:left"><code>Ctrl-Alt-L</code></td><td style="text-align:left">格式化</td></tr><tr><td style="text-align:left"><code>Ctrl-Alt-F</code></td><td style="text-align:left">局部变量提升成属性</td></tr><tr><td style="text-align:left"><strong><code>Ctrl-Alt-0</code></strong></td><td style="text-align:left">更换bgImage(自定义)</td></tr><tr><td style="text-align:left"><code>Ctrl-Shift-A</code></td><td style="text-align:left">设置bgImage等属性</td></tr><tr><td style="text-align:left"><code>Shift-Tab</code></td><td style="text-align:left">整体左移</td></tr><tr><td style="text-align:left">按2次 <code>Shift</code></td><td style="text-align:left">Search Everywhere</td></tr><tr><td style="text-align:left"><code>Ctrl-N</code></td><td style="text-align:left">搜索类</td></tr><tr><td style="text-align:left"><code>Ctrl-Q</code></td><td style="text-align:left">预览类文档</td></tr><tr><td style="text-align:left"><code>Ctrl-Alt-Shift-N</code></td><td style="text-align:left">搜索方法和全局变量</td></tr><tr><td style="text-align:left"><code>Ctrl-Shift-N</code></td><td style="text-align:left">搜索文件</td></tr></tbody></table><p>快捷更换背景图<img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230904183436134.png" alt=""></p><p>设置鼠标滚轮缩放字体效果</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230904183456853.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230704000238860.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230704000309591.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230704000315880.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230704000321832.png" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>快捷键</tag>
      
      <tag>CMD</tag>
      
      <tag>IDEA</tag>
      
      <tag>VSCode</tag>
      
      <tag>Notepad++</tag>
      
      <tag>XShell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>问题记录</title>
    <link href="/2023/09/13/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/09/13/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://blog.csdn.net/qq_43775855/category_11481883.html?spm=1001.2014.3001.5482">CSDN问题记录_Bug</a></p></blockquote><h1>获取网站图标</h1><ol><li><p>直接在网址后加 <code>/favicon.ico</code> 可获得大部分网站的图标，如</p><div align="left">   <a href="https://www.baidu.com/favicon.ico">baidu.com/favicon.ico</a><span>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</span><a href="https://www.runoob.com/favicon.ico">runoob.com/favicon.ico</a></br>   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230413191006012.png" style="zoom:67%;" />   <span>&emsp;&emsp;</span>   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230413191914276.png"/></div></li><li><p>F12查看网页源代码header标签</p><div align="left">   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230413191459468.png" width=80%/>   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230413191340704.png" width=20%/></div><p>有的需要网站和图标链接拼接才能找到</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230413191605912.png"/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230413191726787.png"/></li></ol><h1><a href="https://www.likecs.com/show-440349.html">Win10使用clash开启代理后仍然无法proxy上网的问题</a></h1><p>win+r -&gt; <code>wt</code> -&gt; <code>netsh winsock reset</code> 回车 -&gt; 重启电脑生效 -&gt; 开clash换节点多试几次 ok</p><h1>同一wifi手机连上能上网电脑连上却没网</h1><p>手机能上网说明wifi没问题,应是电脑配置不当导致</p><ol><li><p>关闭[代理]选项卡</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230912235859895.png"/><p>解决<strong>√</strong>   <code>127.0.0.1:7890</code>是代理使用的端口号</p></li><li><p>重置网络</p><p>管理员身份运行cmd: <code>netsh winsock reset</code> 重启电脑生效 或 在设置中重置网络:<br><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230913000102430.png"/></p></li></ol><p>其它方法参考 <a href="https://zhuanlan.zhihu.com/p/538964900">知乎_同一个Wifi无线网络手机能上但是电脑不能上网的解决方法</a></p><h1>下载出错: 无法连接到代理服务器 127.0.0.1:7890</h1><p>问题:</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230730044631579.png" width=60%/><p>原因:</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230730050633987.png" width=70%/><p>解决: 更新chrome后解决</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230730050804331.png" width=60%/><p>取消勾选  未解决</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230730045131441.png" width=60%/><p>确认防火墙设置允许IDM从互联网下载文件–将IDM下载软件添加进允许的应用 未解决</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230730045848410.png"/><h1><a href="https://blog.csdn.net/weixin_47573148/article/details/125828694">Win邮件绑定Google邮箱</a></h1><p>选择最下面<strong>高级设置</strong>，不是<strong>Google</strong>！</p> <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230414021434743.png" style="zoom:67%;" /><table><thead><tr><th>传入电子邮件服务器</th><th>imap.gmail.com:993:1</th></tr></thead><tbody><tr><td><strong>传出（SMTP）电子邮件服务器</strong></td><td><strong>smtp.gmail.com:465:1</strong></td></tr></tbody></table><h1>取消Chrome浏览器自动重置</h1><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230414184833315.png" width=70%/><h1>html文档无法通过Chrome浏览器打开</h1><p>默认ME浏览器,打开方式中没有Chrome浏览器</p> <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418022249480.png"/><p>win11默认应用设置中没有 <code>.html</code> 文件类型</p><div align="left">   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418014859604.png" style="zoom: 67%;" />   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418014956916.png" style="zoom:50%;" /></div><ol><li><p>通过复制路径到Chrome搜索框打开</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418014739677.png" style="zoom:67%;" /></li><li><p>在Chrome中按 <code>Ctrl + O</code> 快捷键浏览文件打开</p></li></ol><div align="left">   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418022134854.png" width=60% />   <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418022155613.png" width=40% /></div><ol start="3"><li>打开方式选择Chrome<br><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418022431097.png" style="zoom:75%;" /></li></ol><h1><a href="https://zhuanlan.zhihu.com/p/571190754?utm_id=0">解决谷歌翻译不能用的方法</a></h1><p>换成作者给的第1个ip就行 打开stackoverflow检查🆗了</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418065836126.png" style="zoom:80%;" /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230418065801529.png"/><h1><a href="https://blog.csdn.net/qq_43775855/article/details/128374402">C盘清理步骤</a></h1><h1>Snapdrop传输文件时不能开VPN否则连不上</h1><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230730064748192.png" width=70%/><p>同理一些国内app开着VPN也登陆不了或者功能受限,关了VPN就好了</p><p>还有手环之前连了iPad后iPhone就连不上了是以下原因:</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230730201047087.png"/><h1>ChatGPT访问不了</h1><p>提示: Sorry, you have been blocked</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230714194345434.png" width=80%/><p>无法连接问题:</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230715003929256.png" width=70%/><p>清除浏览器缓存并重启浏览器  / 刷新缓存:</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230715004256393.png" width=50%/><h1>IOS端ChatGPT</h1><p>注意: VPN要选择全局模式,否则访问不了   虚拟在线号码接收短信服务: <a href="https://sms-activate.org/cn">https://sms-activate.org/cn</a></p><p>OpenAI注册ChatGPT: <a href="https://openai.com/">https://openai.com/</a> PC端注册过则IOS端直接登录就行</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230726220355315.png"/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230726220418928.png"/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230726221123949.png"/><div align="center"><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230728134527715.png" width=70%/></div><h1>GitHub预览html页面</h1><p>原页面</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230915202610254.png" alt=""></p><p>在地址前加 <code>raw.githack.com</code> 预览</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230915202752408.png" alt=""></p><p>若仓库已发布, 直接在域名仓库名链接后加入对应的html相对路径即可</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230915202956938.png" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>bug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux</title>
    <link href="/2023/02/04/Linux/"/>
    <url>/2023/02/04/Linux/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_44262126/article/details/108217320">参考笔记</a>  <a href="https://www.linuxprobe.com/">《Linux就该这么学》在线书籍 </a> <a href="https://www.linuxcool.com/">Linux命令大全(手册)</a> <a href="https://github.com/judasn/Linux-Tutorial">Linux-Tutorial</a></p><h1>VM CentOS</h1><blockquote><p>环境  <code>VMWare 16.2</code>   <code>CentOS 8.5</code></p></blockquote><h2 id="创建虚拟机">创建虚拟机</h2> <div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183333348.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183418771.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183436550.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183455168.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183707509.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183916666.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183935071.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204183947796.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184008316.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184032630.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184047771.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184214195.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184231661-1675507934147-1.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184707182.png" alt=" 自定义硬件 中引用iso后点完成"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184444846.png" alt="引用iso镜像文件前确保 已启用虚拟化"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184604106-1675511278167-9.png" alt="引用iso镜像文件"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204184748060.png" alt="或点完成后再去 虚拟机设置 中引用iso"  width=50% /></div><h2 id="安装CentOS">安装CentOS</h2><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204193015657.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204185449393.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204193554030.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204185525202.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204190158845.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204190335581.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204190826378.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204191008721.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204191129347-1675510451740-5.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204192122125.png"   width=50% /></div><p>KDUMP-实际服务器中需启用，但自己做测试可以先禁用以节省资源</p><blockquote><p>安装界面显示不全，因为屏幕分辨率未被正确识别，要关闭虚拟机修改显示器设置，选择本机真实屏幕分辨率重启安装（重启后要重新走以上步骤）</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204192720597.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204192717600.png"   width=50% /></div></blockquote><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204193832775.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204194018979.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204194303003.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204194519385.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204195851209.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204195928424.png"   width=50%  /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204195937488.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204195947460.png" alt="结束配置并重启虚拟机"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204200013512.png" alt="登录"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204200527438.png" alt="检查网络"  width=50% /></div><hr><p>进入 <code>Centos8.5</code> 系统后，发现桌面上没有任何图标而且右键没有终端/新建等操作，即使使用终端新建一些文件，也无法在桌面上显示</p><p><code>Centos7</code>默认为<code>X11</code>桌面版本，但是<code>Centos8</code>默认为<code>Wayland</code>，此时需要更换桌面版本，然后就能正常显示了</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204202259819.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206201402473.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206201802954-1675686295564-1.png"   width=50%/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204204210896.png" alt="配置打开终端快捷键"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204205808263.png" alt="计算机 位于 其他位置"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230204205827017.png"   width=50% /></div><p>添加共享文件夹Windows <code>D:\vm\share\</code>Linux  <code>/mnt/hgfs/share</code></p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206193811434.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206202721065.png"   width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206202222959.png" alt="在桌面创建共享文件夹快捷方式"  width=50% /></div><p>设置无密登录</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213125408412.png" alt="image-20230213125408412" style="zoom: 67%;" /><h2 id="远程登录-Linux-系统">远程登录 Linux 系统</h2><p>测试 Windows 和 Linux 是否相通：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig #network interfaces configuring网络接口配置 功能描述：显示所有网络接口的配置信息<br>ping ip地址/目的主机 #功能描述：测试当前服务器是否可以连接目的主机<br></code></pre></td></tr></table></figure><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206204532820.png" alt="在 Linux 下 ifconfig 查看当前网络 IP"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206204524902.png" alt="在 Windows 下 ping Linux 的 IP 地址"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206204955972.png" alt="设置-网络-有线"  width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206204948425.png" alt="设置中查看 Linux 的 IP 地址"  width=50% /></div><p>XShell 连接虚拟机：</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206205936968.png"/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206210938410.png"/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206211020893.png"/></div><p>注意（Linux 默认开启 SSHD 服务）：</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625500041853-a39edcc8-6467-4306-a29c-7e55fc85d01b.png"/>    <img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206212458911.png"/></div><h1>Linux 世界里 一切皆文件</h1><p>文件颜色：</p><p><font color=green>绿色可执行文件，可执行的程序</font></p><p><font color=red>红色压缩文件或者包文件</font></p><p><font color=blue>蓝色目录</font></p><p>黑底白字/白底黑字一般性文件，如文本文件，配置文件，源码文件等</p><p><font color=lightblue>浅蓝色链接文件，主要是使用ln命令建立的文件</font></p><p><font color=pink>红色闪烁链接的文件有问题</font></p><p><font color=orange>黄色设备文件</font></p><p><font color=gray>灰色其他文件</font></p><p>文件属性：</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625499727651-1f3f5de9-6a84-4d52-b014-2bfba7ed22ac.png" alt=""></p><p>环境变量：</p><p>配置全局环境变量，用 <code>root</code> 用户权限写入 <code>sudo vim /etc/profile.d/my_env.sh</code>，使脚本生效 <code>source /etc/profile</code></p><h1>VIM</h1><p><a href="https://zhuanlan.zhihu.com/p/165254171">VIM Adventures玩游戏练VIM</a></p><p><strong>vi</strong>(文本编辑器)–[增强版]–&gt;<strong>vim</strong>(具有程序编辑能力)</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211172143688-1683698172248-1.png" width=52% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211164529648.png" width=48% /></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">:set nu#显示行号<br>:set nonu#取消行号<br>:noh#取消高亮<br>:s/old/new#替换当前行匹配到的第1个old为new<br>:s/old/new/g#替换当前行匹配到的所有old为new<br>:%s/old/new#替换文档中匹配到的第1个old为new<br>:%s/old/new/g#替换文档中匹配到的所有old为new<br>/[关键字]  #--[enter]--&gt; 查找 --[n]--&gt; 查找next<br></code></pre></td></tr></table></figure><h1>网络配置</h1><h2 id="网络连接的3种形式">网络连接的3种形式</h2><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625496025387-c7b6019a-8b3c-4d6a-95f3-a8321d7d2aff.png" width=30% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625496806099-b615c090-c0fc-4e92-aff1-2e84e5595cf2.png"/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213131007090.png" width=70%/></div><h2 id="查看-Windows-网络配置">查看 Windows 网络配置</h2><ul><li><p>从设置进入(或通过WiFi图标查看)：设置-网络和Internet-状态-更改适配器选项</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211170009576-1676112153710-3-1683698429922-9.png" width=20% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211165836331.png" width=40% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211190256705.png" alt="Windows网络连接" width=40% /></div></li><li><p>或从控制面板进入：控制面板-网络和Internet-查看网络状态和任务-更改适配器设置（界面同上）</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211170407366-1683698500796-15.png" width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211170346975.png" width=50% /></div></li><li><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211170726981.png" alt="在 Windows下 ipconfig 查看网络配置" width=50% /></li></ul><h2 id="查看-Linux-网络-IP-和网关">查看 Linux 网络 IP 和网关</h2><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211190855332.png" width=60% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230206204532820.png" alt="在 Linux 下 ifconfig 查看当前网络 IP"  width=40% /></div><h2 id="Linux-网络环境配置">Linux 网络环境配置</h2><ul><li><p>默认自动获取：每次获取的ip可能不同，不适合服务器（ip是固定的）</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213124821145.png" width=50%/><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230211185454466-1683698341971-6.png" width=50% /></div></li><li><p>通过修改配置文件指定固定ip（root用户）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改网络配置文件 当前局域网在Linux中的设备名是ens160(很多是ens33)</span><br>vim /etc/sysconfig/network-scripts/ifcfg-eth160<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改内容</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">IP地址(主机名是hadoop100,最后一个网段改为100好记)</span><br>IPADDR=192.168.1.100   <br><span class="hljs-meta prompt_">#</span><span class="language-bash">网关</span>  <br>GATEWAY=192.168.1.2      <br><span class="hljs-meta prompt_">#</span><span class="language-bash">域名解析器(可添加多个 dns和网关保持一致)</span><br>DNS1=192.168.1.2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">子网掩码默认255.255.255.0</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启网络 若报错reboot重启虚拟机</span><br>service network restart<br>systemctl restart network#centos7以后新增<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改主机名和主机映射文件 重启生效</span><br>hostname#查看当前服务器主机名<br>vim /etc/hostname#当前服务器主机名<br>vim /etc/sysconfig/network#HOSTNAME属性修改主机名(我的该文件没有内容)<br>hostnamectl#显示主机名和一些系统相关的信息(CentOS7及以上版本才增加的命令 ctl指control)<br>hostnamectl set-hostname 主机名#永久修改主机名且无需重启系统<br>vim /etc/hosts#主机映射文件<br></code></pre></td></tr></table></figure><p><code>C:\Windows\System32\drivers\etc\HOSTS</code>–Windows主机映射文件 (拷贝出来修改后再替换原文件) 若在该文件下写入 <code>www.sharm.com 百度</code>，则在浏览器搜索百度时会跳转到写入的这个网站中，这叫<a href="https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D%E5%8A%AB%E6%8C%81/7657893?fromtitle=DNS%E5%8A%AB%E6%8C%81&amp;fromid=6739044&amp;fr=aladdin">域名劫持</a></p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213142813539.png" alt="修改配置文件指定固定ip" width=80% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213144341959.png" alt="检查修改后的ip" width=70% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213150148564.png" alt="Windows测试连接Linux修改后的ip地址" width=30% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213150751755.png" width=70% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213153116873.png" alt="查看和修改主机名" width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213151952620.png" alt="/etc/hosts主机映射文件" width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213145319818.png" alt=" Windows主机映射文件" width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213153859396.png" alt="直接ping主机名" width=50% /></div></li></ul><p>修改XShell设置：</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213155622655.png" width=52% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213155539451.png" width=38% /></div><p>修改Xftp设置解决文件名中文乱码问题：</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213160207227.png" alt=""></p><h1>系统管理</h1><h2 id="服务管理">服务管理</h2><p><strong>进程 process</strong>：一个正在执行的程序或命令</p><p><strong>服务 service</strong>：启动后一直存在、常驻内存的进程（运行在后台，监听某个端口，等待其它程序的请求–由守护进程daemon守护系统服务，d结尾表示这是守护进程）</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230217145806826.png"/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">service 服务名 start|stop|restart|reload|status #CentOS7.0前(7.0后兼容) 查看服务：/etc/init.d/服务名称<br>systemctl start|stop|restart|reload|status 服务名 #CentOS7.0后 查看服务：/usr/lib/systemd/system/服务名称<br></code></pre></td></tr></table></figure><p><code>setup</code> 查看服务名：在vm中(而不是xshell)使用该命令选择 <code>系统服务</code> 回车</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230217183336462-1683700479118-19.png" width=30% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230217183340674.png" width=40% /></div><p>常用服务：</p><p>网络服务 <code>network</code> (CentOS7默认使用的网络服务是NetworkManager) <a href="https://blog.csdn.net/qq_43775855/article/details/129088280?spm=1001.2014.3001.5502">报错记录</a></p><p>防火墙 <code>iptables</code></p><p>关闭或启用防火墙后立即生效，可通过telnet在Windows下测试：</p><p><a href="https://cloud.tencent.com/developer/article/2113234">telnet 查看某个端口是否可访问</a></p><p><code>telnet ip [端口]</code> 利用telnet指令检查Linux的某个端口是否在运行</p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230220125354284.png" width=35% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230220125324089.png" width=30% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230220125411803.png" width=25% /></div><p><code>service/systemctl</code> 方式只是临时生效，当重启系统后，还是回归以前对服务的设置，设置永久生效要使用 <code>chkconfig</code> 指令</p><h2 id="系统运行级别">系统运行级别</h2><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230217174629462.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">multi-user.target#=原运行级别3 多用户有网 无图形界面<br>graphical.target#=原运行级别5 多用户有网 有图形界面<br>systemctl get-default #查看当前运行级别<br>systemctl set-default TARGET.target #修改当前运行级别 TARGET取multi-user或graphical<br></code></pre></td></tr></table></figure><p>centos7以前查看默认运行级别在 <code>/etc/inittab</code></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230217184209047.png" alt=""></p><p><code>ctrl+shft+f2 f1</code></p><h2 id="配置服务开机启动-关闭防火墙">配置服务开机启动 关闭防火墙</h2><p>chkconfig设置服务自启动/关闭需reboot重启机器生效</p><p>查看当前系统中使用chkconfig工具的服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@hadoop100 ~]# chkconfig --list<br><br>注：该输出结果只显示 SysV 服务，并不包含<br>原生 systemd 服务。SysV 配置数据<br>可能被原生 systemd 配置覆盖。 <br><br>      要列出 systemd 服务，请执行 &#x27;systemctl list-unit-files&#x27;。<br>      查看在具体 target 启用的服务请执行<br>      &#x27;systemctl list-dependencies [target]&#x27;。<br><br>network        0:关1:关2:关3:关4:关5:关6:关<br></code></pre></td></tr></table></figure><p>centos6及更早版本使用的服务管理机制叫SysV，centos7使用的服务管理机制叫systemd</p><p>centos6的服务管理进程为init，centos7中的服务管理进程为systemd</p><p>network服务脚本的存放位置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@hadoop100 ~]# ls /etc/init.d/<br>functions  network  README<br></code></pre></td></tr></table></figure><p>systemd是centos7的服务管理机制，列出systemd中的service：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl list-units --all --type=service<br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230220123111428.png" alt=""></p><p><code>LOAD</code>：是否load<code>ACTIVE</code>：是否active<code>SUB</code>：是否running<code>DESCRIPTION</code>：描述信息</p><p>不加 <code>–all</code> 则不会列出 inactive（未激活状态）的 service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl list-unit-files #显示的内容不仅是service还有target、socket<br></code></pre></td></tr></table></figure><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230220123736381.png" alt=""></p><h2 id="关机-重启"><a href="https://www.linuxcool.com/shutdown">关机 重启</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">sync#内存数据写入磁盘防止数据丢失 &lt;-h/r前先执行<br>halt#立刻关机<br>reboot#立刻重启<br>shutdown -h now#立刻关机<br>shutdown -h 1#1min后关机<br>shutdown -r now#立刻重启<br>shutdown -r 2#2min后重启<br></code></pre></td></tr></table></figure><h1>常用命令</h1><h2 id="帮助指令">帮助指令</h2><p>man ls(ls是外部命令-&gt;其他独立的程序 和shell同级)</p><p>help cd(只能显示shell<strong>内置</strong>命令的帮助信息)</p><p>百度更直接</p><p>区分内置命令和外部命令-<strong>which / type</strong></p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1626336467891-2ae32ca2-3c8f-4923-b3d9-72c27a419738.png" widt=20% /><ol><li>如果是内置命令 <a href="http://c.biancheng.net/view/1136.html">shell内置命令</a></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM_0_8_centos ~]# type cd  <br>cd is a shell builtin <br></code></pre></td></tr></table></figure><p>builtin的英文翻译就是内置命令</p><ol start="2"><li>如果是自己写的shell脚本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM_0_8_centos ask]# type /ask/test.sh  <br>/ask/test.sh is /ask/test.sh <br></code></pre></td></tr></table></figure><p>自己写的shell脚本是外部命令，它的位置是/ask/test.sh</p><ol start="3"><li>常见的find命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM_0_8_centos ask]# type find <br>find is /usr/bin/find <br></code></pre></td></tr></table></figure><p>find是一个外部命令，它的位置是/usr/bin/find</p><p>注:</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1626337648972-8797a43f-54ff-4427-91f8-b3c707e07869.png" widt=20% /><p>sudo cd root 并没有切换到root目录</p><p>sudo 是一种<strong>程序</strong>，用于提升用户的权限</p><p>shell是一个<strong>命令解析器</strong>，sudo cd是错误的，因为cd是shell内置的，不是系统里面的</p><p>sudo可以运行系统带的命令，但无法运行系统一个软件中的命令</p><p>所以这里要切换到root目录，只能先切换到root用户</p><p>常见shell内置命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">source#在当前bash环境下读取并执行指定的命令<br>echo#输出指定的字符串或者变量<br>type#显示指定命令的类型<br>env#显示系统中已存在的环境变量<br>exec#调用并执行指定的命令<br>kill#删除执行中的程序或工作<br>alias#用来设置指令的别名<br>unalias#用来删除指令的别名<br>exit#退出当前的shell<br>jobs#显示linux的任务列表和状态<br>history#显示历史命令<br>logout#退出当前登录的shell<br>export#设置或者显示当前登录的shell<br>cd#切换工作目录<br></code></pre></td></tr></table></figure><p>内置命令</p><p>外部命令</p><p>type [cmd]</p><p>… 是 shell</p><p>help [shell内置命令]</p><p>[外部命令] –help</p><p>man [cmd] 最全</p><p>man -f [内置命令]</p><p>tail  -f  文件#实时追踪该文档的所有更新</p><p>&gt; 输出重定向（覆盖） &gt;&gt; 追加</p><p>ls -l &gt;文件（功能描述：列表的内容写入文件a.txt中（<strong>覆盖写</strong>））</p><p>ls -al &gt;&gt;文件（功能描述：列表的内容<strong>追加</strong>到文件aa.txt的末尾）</p><p>cat 文件1 &gt; 文件2（功能描述：将文件1的内容覆盖到文件2）</p><p>echo “内容” &gt;&gt; 文件</p><p>ln -s xiyou/dssz/ ./dssz#创建软连接</p><p>cd -P dssz/#进入软连接实际物理路径</p><p>删除软链接： rm -rf 软链接名，而不是rm -rf 软链接名/</p><p>date +%Y%m%d#显示当前时间年月日</p><p>date “+%Y-%m-%d %H:%M:%S”#显示当前时间年月日时分秒</p><p>cal [年份]#日历</p><h2 id="用户管理">用户管理</h2><p>用户登录-&gt;自动(默认)进入家目录(/home/k即~)一个用户不能进入其它用户目录</p><h4 id="su切换用户">su切换用户</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@hadoop100 ~]# su k#只能获得用户的执行权限,不能获得环境变量<br>[k@hadoop100 root]$ su<br>密码：<br>[root@hadoop100 ~]# su - k#获得该用户的执行权限及环境变量<br>[k@hadoop100 ~]$ su -#普通用户-&gt;系统管理员<br>密码：<br>[root@hadoop100 ~]# exit#返回原来的用户/断开连接<br>注销<br></code></pre></td></tr></table></figure><p>注销用户 / 退出远程登录：</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625561513595-0632da31-89e6-4d4d-a130-4ad3ac03fdb5-1676614829778-1.png" width=50% /><p>注销指令在 <strong>图形运行级别</strong>(级别5) 无效，在 控制台命令行模式(级别3) 下有效：</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625561385041-f52fefa7-4536-4caa-8696-7c06733b834c-1676614829778-3.png"/><h4 id="sudo用root权限执行操作">sudo用root权限执行操作</h4><p>添加用户k具有root权限，配置成采用sudo命令时无需输入密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/sudoers<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Allow root to run any commands anywhere</span></span> <br>root    ALL=(ALL)       ALL<br>k       ALL=(ALL)     NOPASSWD:ALL<br></code></pre></td></tr></table></figure><h4 id="查询用户信息">查询用户信息</h4><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213181513380.png"/><h4 id="用户组">用户组</h4><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625563766982-4784003c-10b7-4421-87f2-53270734e3b1-1676283414442-7.png" alt="新用户指定组/修改用户的组" width=40% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/1625563899891-bfa78df1-be00-4376-b6cd-c6ebec63e36b.png" alt="组无用户才能删" width=40%/></div><h4 id="用户和组相关文件">用户和组相关文件</h4><p><strong>/etc/passwd</strong>文件： 用户配置，记录用户的各种信息   口令：用户加密密码，加密后的密码保存在/etc/shadow文件</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213182612000.png"/><p><strong>/etc/shadow</strong>文件： 口令配置</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213183107600.png"/><p><strong>/etc/group</strong>文件： 组配置，记录Linux包含的组的信息</p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230213183351833.png"/><p>​</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Typora + PicGO-Core(cmd安装方式) + Github 实现图片上传</title>
    <link href="/2023/02/03/TyporaImg/"/>
    <url>/2023/02/03/TyporaImg/</url>
    
    <content type="html"><![CDATA[<h2 id="参考">参考</h2><p><code>文件--偏好设置--图像–上传服务</code> 2种方式安装参考博客</p><ul><li><p><a href="https://www.cnblogs.com/chonglu/p/16894257.html">PicGo-Core (command line)</a> ：Typora中直接 <code>下载或更新</code> 太慢</p></li><li><p><a href="https://www.cnblogs.com/skuld-yi/p/14533794.html">Custom Command</a>：<code>npm</code> 本地安装 PicGo-Core以命令行方式配置图床</p></li></ul><p><a href="https://github.com/Thobian/typora-plugins-win-img">typora-plugins-win-img</a></p><h2 id="安装-配置">安装 配置</h2><p><img src="https://github.com/Kukukukiki192/TyporaImg/blob/main/img/image-20230203120809911.png?raw=true" alt=""></p><p><code>picgo use uploader</code> 后的图床配置 <code>~\.picgo\config.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;picBed&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;uploader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;github&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">//当前默认上传图床</span><br>    <span class="hljs-attr">&quot;current&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;github&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;github&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;repo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Kukukukiki192/TyporaImg&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">//自己的仓库名</span><br>      <span class="hljs-attr">&quot;branch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;main&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">//默认分支</span><br>      <span class="hljs-attr">&quot;token&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;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&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// github的token</span><br>      <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;img/&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">//自定义存储路径(仓库下新建文件夹，可为空)</span><br>      <span class="hljs-attr">&quot;customUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://github.com/Kukukukiki192/TyporaImg/raw/main&quot;</span>  <span class="hljs-comment">//自定义域名</span><br>      <span class="hljs-comment">//https://github.com/[username]/[repo]/raw/[branch] 必须是该格式,不然用其它域名访问图片404本地加载失败</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;transformer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;path&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;picgoPlugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span>  <span class="hljs-comment">// 为插件预留</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="图片上传服务设置和验证">图片上传服务设置和验证</h2><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230203144056522.png" alt=""></p><p>按照参考建议：插入图片时先保存到本地以实现流畅的即时预览，在完成文章后统一批量上传 <code>格式–图像–上传所有本地图片(Format-Image-Upload All Local Images)</code></p><h2 id="上传图片失败问题">上传图片失败问题</h2><p>针对状态码401情况的解决方案：删除旧的token，生成新的token</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230207151331420.png" alt=""></p><div><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230207155156678.png" width=40% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230207155450598.png" width=60% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230207154220620.png" width=50% /><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230207154627237.png" width=50% /></div><p>针对状态码422情况的解决方案：这是由同名文件导致的，修改上传的图片名称或删除之前上传的同名文件</p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230915213555559.png" alt=""></p><p><img src="https://github.com/Kukukukiki192/TyporaImg/raw/main/img/image-20230915214145277.png" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>Typora</tag>
      
      <tag>PicGO</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HackerRank-SQL</title>
    <link href="/2021/10/13/HackerRank-SQL/"/>
    <url>/2021/10/13/HackerRank-SQL/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.begtut.com/sql/sql-ref-mysql.html">MySQL 函数</a></p><p>:green_circle: easy :yellow_circle: medium 🔴 hard</p><h2 id="1-Type-of-Triangle-green-circle"><a href="https://www.hackerrank.com/challenges/what-type-of-triangle/problem?isFullScreen=true">1. Type of Triangle</a> :green_circle:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- select </span><br><span class="hljs-comment">--     case</span><br><span class="hljs-comment">--     when A=B and B=C then &quot;Equilateral&quot;</span><br><span class="hljs-comment">--     when A=B or B=C or A=C then &quot;Isosceles&quot; </span><br><span class="hljs-comment">--     --(1 1 0 is not a triangle, next line should come befor this line)</span><br><span class="hljs-comment">--     when A+B&lt;=C or A+C&lt;=B or B+C&lt;=A then &quot;Not A Triangle&quot;</span><br><span class="hljs-comment">--     else &quot;Scalene&quot;</span><br><span class="hljs-comment">--     end</span><br><span class="hljs-comment">-- from TRIANGLES</span><br><br><span class="hljs-keyword">select</span> <br>    <span class="hljs-keyword">case</span> <br>    <span class="hljs-keyword">when</span> A<span class="hljs-operator">+</span>B<span class="hljs-operator">&lt;=</span>C <span class="hljs-keyword">or</span> A<span class="hljs-operator">+</span>C<span class="hljs-operator">&lt;=</span>B <span class="hljs-keyword">or</span> B<span class="hljs-operator">+</span>C<span class="hljs-operator">&lt;=</span>A <span class="hljs-keyword">then</span> &quot;Not A Triangle&quot;<br>    <span class="hljs-keyword">when</span> A<span class="hljs-operator">=</span>B <span class="hljs-keyword">and</span> B<span class="hljs-operator">=</span>C <span class="hljs-keyword">then</span> &quot;Equilateral&quot;<br>    <span class="hljs-keyword">when</span> A<span class="hljs-operator">=</span>B <span class="hljs-keyword">or</span> B<span class="hljs-operator">=</span>C <span class="hljs-keyword">or</span> A<span class="hljs-operator">=</span>C <span class="hljs-keyword">then</span> &quot;Isosceles&quot;           <br>    <span class="hljs-keyword">else</span> &quot;Scalene&quot;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">from</span> TRIANGLES<br><br><span class="hljs-comment">-- A+B&gt;C -&gt; A+B+C&gt;2*C greatest(A,B,C):select max</span><br><span class="hljs-keyword">select</span> <br>    <span class="hljs-keyword">case</span><br>    <span class="hljs-keyword">when</span> greatest(A,B,C)<span class="hljs-operator">*</span><span class="hljs-number">2</span><span class="hljs-operator">&gt;=</span>(A<span class="hljs-operator">+</span>B<span class="hljs-operator">+</span>C) <span class="hljs-keyword">then</span> &quot;Not A Triangle&quot; <br>    <span class="hljs-keyword">when</span> A<span class="hljs-operator">=</span>B <span class="hljs-keyword">and</span> B<span class="hljs-operator">=</span>C <span class="hljs-keyword">then</span> &quot;Equilateral&quot;<br>    <span class="hljs-keyword">when</span> A<span class="hljs-operator">=</span>B <span class="hljs-keyword">or</span> B<span class="hljs-operator">=</span>C <span class="hljs-keyword">or</span> A<span class="hljs-operator">=</span>C <span class="hljs-keyword">then</span> &quot;Isosceles&quot;<br>    <span class="hljs-keyword">else</span> &quot;Scalene&quot;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">from</span> TRIANGLES<br></code></pre></td></tr></table></figure><h2 id="2-Binary-Tree-Nodes-yellow-circle"><a href="https://www.hackerrank.com/challenges/binary-search-tree-1/problem?isFullScreen=true">2. Binary Tree Nodes</a> :yellow_circle:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> N,<br>    <span class="hljs-keyword">case</span><br>    <span class="hljs-keyword">when</span> P <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Root&#x27;</span><br>    <span class="hljs-keyword">when</span> N <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> P <span class="hljs-keyword">from</span> BST) <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Inner&#x27;</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;Leaf&#x27;</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">from</span> BST<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> N;<br><br><span class="hljs-comment">--</span><br><span class="hljs-keyword">select</span> N, if(P <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;Root&#x27;</span>, if(N <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> P <span class="hljs-keyword">from</span> BST), <span class="hljs-string">&#x27;Inner&#x27;</span>, <span class="hljs-string">&#x27;Leaf&#x27;</span>))<br><span class="hljs-keyword">from</span> BST<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> N;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/10/05/hello-world/"/>
    <url>/2021/10/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
